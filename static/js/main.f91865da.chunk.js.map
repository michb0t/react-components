{"version":3,"sources":["Game.js","Pokecard.js","Pokedex.js","Pokegame.js","Demo.js","Button.js","BrokenClick.js","Clicker.js","App.js","reportWebVitals.js","index.js"],"names":["Game","props","state","score","gameOver","this","Component","Pokecard","number","imgSrc","id","slice","className","name","src","alt","type","exp","Pokedex","title","isWinner","pokemon","map","p","base_experience","Pokegame","hand1","hand2","length","randnum","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","Demo","console","log","Button","onClick","alert","BrokenClick","clicked","handleClick","bind","e","setState","Clicker","num","genRandom","rand","App","color","animal","food","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f91865da.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        score: 99,\r\n        gameOver: false\r\n        };\r\n        // this.setState({this.state.score})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Game Demo</h1>\r\n                <h2> Your score is {this.state.score}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React, { Component } from \"react\";\r\nimport \"./Pokecard.css\";\r\n\r\n// const POKE_API = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\";\r\nconst POKE_API = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n\r\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3): number);\r\n\r\nclass Pokecard extends Component {\r\n    render() {\r\n        let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`\r\n        return (\r\n            <div className=\"Pokecard\">\r\n                <h1 className=\"Pokecard-title\">{this.props.name}</h1>\r\n\r\n                <div className=\"Pokecard-img\">\r\n                    <img src={imgSrc} alt={this.props.name}/>\r\n                </div>\r\n                \r\n                <div>\r\n                    <p className=\"Pokecard-data\"><span>Type:</span> {this.props.type}</p>\r\n                    <p className=\"Pokecard-data\"><span>EXP:</span> {this.props.exp}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default Pokecard;\r\n\r\n\r\n// https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png\r\n// https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${id}.png\r\n","import React, {Component} from \"react\";\r\nimport Pokecard from \"./Pokecard\";\r\nimport \"./Pokedex.css\"\r\n\r\nclass Pokedex extends Component {\r\n    render() {\r\n        let title; \r\n        if (this.props.isWinner) {\r\n            title = <h2 className=\"Pokedex-winner\">Winning Hand</h2>\r\n        } else {\r\n            title = <h2 className=\"Pokedex-loser\">Losing Hand</h2>\r\n        }\r\n    \r\n        return (\r\n            <div className=\"Pokedex\">\r\n                {title}\r\n                <p>Total experience: {this.props.exp}</p>\r\n                <div className=\"Pokedex-cards\">\r\n                {this.props.pokemon.map((p) => (\r\n                    <Pokecard id={p.id} name={p.name} type={p.type} exp={p.base_experience}/>\r\n                ))}                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokedex;","import React, { Component } from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\n\r\nclass Pokegame extends Component {\r\n    static defaultProps = {\r\n        pokemon: [\r\n            {id: 4, name: 'Charmander', type: 'fire', base_experience: 62},\r\n            {id: 7, name: 'Squirtle', type: 'water', base_experience: 63},\r\n            {id: 11, name: 'Metapod', type: 'bug', base_experience: 72},\r\n            {id: 12, name: 'Butterfree', type: 'flying', base_experience: 178},\r\n            {id: 25, name: 'Pikachu', type: 'electric', base_experience: 112},\r\n            {id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95},\r\n            {id: 94, name: 'Gengar', type: 'poison', base_experience: 225},\r\n            {id: 133, name: 'Eevee', type: 'normal', base_experience: 65}\r\n        ]\r\n    };\r\n\r\n    render() {\r\n        let hand1 = [];\r\n        let hand2 = [...this.props.pokemon];\r\n        while (hand1.length < hand2.length) {\r\n            let randnum = Math.floor(Math.random() * hand2.length);\r\n            let randPokemon = hand2.splice(randnum, 1)[0];\r\n            hand1.push(randPokemon);\r\n        }\r\n        let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n        let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0);\r\n        return (\r\n\r\n            <div>\r\n                <Pokedex pokemon={hand1} exp={exp1} isWinner={exp1 > exp2}/>\r\n                <Pokedex pokemon={hand2} exp={exp2} isWinner={exp2 > exp1}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokegame;","import React, {Component} from \"react\";\r\n\r\nclass Demo extends Component {\r\n    constructor(props) {\r\n        super();\r\n        console.log(this.props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Demo Component</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Demo;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        return (\r\n            <button onClick={function() {\r\n                alert(\"clicked\")\r\n            }}>\r\n                Click me!\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React,{Component} from \"react\";\r\n\r\nclass BrokenClick extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {clicked: false};\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        // alternate syntax\r\n        // state = {clicked:false}\r\n        // handleClick = e => {\r\n        //     this.setState ({clicked:true})\r\n        // };\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.setState ({clicked: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.clicked ? \"CLICKED\" : \"NOT CLICKED\"}</h1>\r\n                <button onClick={this.handleClick}>\r\n                    Click me!\r\n                </button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default BrokenClick;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Clicker extends Component {\r\n    constructor(props) { //make stateful\r\n        super(props);\r\n        this.state= {num: 1}; //intiitialize state\r\n        this.genRandom = this.genRandom.bind(this);\r\n    }\r\n    genRandom() {\r\n        //pick ran num 1-10\r\n        let rand = Math.floor(Math.random() * 10) + 1;\r\n        //update state with new ran\r\n        this.setState({num: rand});\r\n        //bind\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> Clicker Demo</h1>\r\n                <h2>Number is {this.state.num}</h2>\r\n                {this.state.num === 7 \r\n                    ? <h2>Yoo win!</h2>\r\n                    : <button onClick={this.genRandom}>Random Number</button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clicker;\r\n","// import Pokedex from \"./Pokedex\";\nimport Game from \"./Game\";\nimport './App.css';\nimport Pokegame from \"./Pokegame\";\nimport Demo from \"./Demo\";\n// import Rando from \"./Rando\";\nimport Button from \"./Button\";\nimport BrokenClick from \"./BrokenClick\";\nimport Clicker from \"./Clicker\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Michelle's Pokedex</h1>\n      <Pokegame/>\n      <Game color=\"purple\"/>\n      <Demo animal=\"Bobcat\"\n            food=\"Pineapple\"/>\n      {/* <Rando maxNum={7}/> */}\n      <Button/>\n      <BrokenClick/>\n      <Clicker/>\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}